name: GitHub CI
on:
  pull_request:
  push:
    tags:
      - "*"
    branches:
      - main
  workflow_dispatch:

env:
  MAIN_PYTHON_VERSION: '3.10'
  DOCUMENTATION_CNAME: 'examples.scade.docs.pyansys.com'
  LIBRARY_NAME: 'ansys-scade-examples'
  LIBRARY_NAMESPACE: 'ansys.scade.examples'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:

  doc-style:
    name: "Documentation style"
    runs-on: ubuntu-latest
    steps:
      - uses: ansys/actions/doc-style@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}


  doc-build:
    name: "Build documentation"
    runs-on: ubuntu-latest
    timeout-minutes: 30
    needs: [doc-style]
    steps:
      - uses: ansys/actions/doc-build@v6
        with:
          python-version: ${{ env.MAIN_PYTHON_VERSION }}

      # - name: "Zipping the examples directory"
      #   run: |
      #     sudo apt-get install zip
      #     zip -r examples.zip ./examples

      # - name: "Upload zip to artifacts"
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: examples
      #     path: ./examples.zip
      #     retention-days: 7
      #     if-no-files-found: error

  release:
    name: "Release project"
    runs-on: ubuntu-latest
    needs: [build-library]
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags')
    steps:
      - name: "Release to GitHub"
        uses: ansys/actions/release-github@v6
        with:
          library-name: ${{ env.LIBRARY_NAME }}
          # additional-artifacts: 'examples'

  doc-deploy-dev:
    name: "Deploy development documentation"
    # Deploy development only when merging or pushing to the 'main' branch
    runs-on: ubuntu-latest
    needs: [build-library]
    if: github.event_name == 'push' && !contains(github.ref, 'refs/tags')
    steps:
      - uses: ansys/actions/doc-deploy-dev@v6
        with:
          doc-artifact-name: 'documentation-html'
          cname: ${{ env.DOCUMENTATION_CNAME }}
          token: ${{ secrets.GITHUB_TOKEN }}

  doc-deploy-stable:
    name: "Deploy stable documentation"
    # Deploy release documentation when creating a new tag
    runs-on: ubuntu-latest
    needs: [release]
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags')
    steps:
      - uses: ansys/actions/doc-deploy-stable@v6
        with:
          doc-artifact-name: 'documentation-html'
          cname: ${{ env.DOCUMENTATION_CNAME }}
          token: ${{ secrets.GITHUB_TOKEN }}
